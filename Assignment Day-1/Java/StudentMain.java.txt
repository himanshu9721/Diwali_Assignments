import java.io.*;
import java.util.*;

public class StudentMain {
    public static void main(String[] args) {
        // TreeSet to store students in decreasing order of attendance
        TreeSet<Student> students = new TreeSet<>(
            (s1, s2) -> Double.compare(s2.getAttendance_percentage(), s1.getAttendance_percentage())
        );

        // Create and add 10 students
        students.add(new Student(1, "Aman", "BCA", 85.0, 78));
        students.add(new Student(2, "Riya", "BTech", 92.0, 88));
        students.add(new Student(3, "Karan", "BSc", 55.0, 65));
        students.add(new Student(4, "Meena", "BBA", 72.0, 80));
        students.add(new Student(5, "Rahul", "BCom", 68.0, 90));
        students.add(new Student(6, "Sita", "MBA", 88.0, 82));
        students.add(new Student(7, "Vikram", "BTech", 59.0, 74));
        students.add(new Student(8, "Pooja", "BCA", 95.0, 95));
        students.add(new Student(9, "Tina", "BBA", 76.0, 70));
        students.add(new Student(10, "Arjun", "BSc", 61.0, 60));

        // Display grades and handle attendance exception
        System.out.println("=== Student Grades ===");
        for (Student s : students) {
            try {
                String grade = s.calculateGrade();
                System.out.println(s + " | Grade: " + grade);
            } catch (LowAttendanceException e) {
                System.out.println(s + " | " + e.getMessage());
            }
        }

        // Serialize students
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("students.ser"))) {
            for (Student s : students) {
                oos.writeObject(s);
            }
            System.out.println("\nâœ… 10 Student objects serialized to 'students.ser'.");
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Deserialize to verify
        System.out.println("\n=== Deserialized Students ===");
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream("students.ser"))) {
            while (true) {
                try {
                    Student s = (Student) ois.readObject();
                    System.out.println(s);
                } catch (EOFException e) {
                    break; // end of file reached
                }
            }
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
}
