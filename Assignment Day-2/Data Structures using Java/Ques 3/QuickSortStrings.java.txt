public class QuickSortStrings {

    // Function to perform quick sort
    public static void quickSort(String[] arr, int low, int high) {
        if (low < high) {
            int pi = partition(arr, low, high);

            // Recursively sort elements before and after partition
            quickSort(arr, low, pi - 1);
            quickSort(arr, pi + 1, high);
        }
    }

    // Partition function
    private static int partition(String[] arr, int low, int high) {
        String pivot = arr[high]; // choose last element as pivot
        int i = low - 1;          // index of smaller element

        for (int j = low; j < high; j++) {
            if (arr[j].compareTo(pivot) <= 0) {
                i++;
                // swap arr[i] and arr[j]
                String temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }

        // swap arr[i+1] and arr[high] (pivot)
        String temp = arr[i + 1];
        arr[i + 1] = arr[high];
        arr[high] = temp;

        return i + 1;
    }

    // Display array
    public static void display(String[] arr) {
        for (String s : arr) {
            System.out.print(s + " ");
        }
        System.out.println();
    }

    // Main method
    public static void main(String[] args) {
        String[] arr = {"banana", "apple", "kiwi", "mango", "strawberry"};

        System.out.println("Original Array:");
        display(arr);

        quickSort(arr, 0, arr.length - 1);

        System.out.println("Sorted Array:");
        display(arr);
    }
}
